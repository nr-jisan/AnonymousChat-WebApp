<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Anonymous Group Chat</title>
  <link rel="stylesheet" href="/styles.css" />
  <style>
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      overflow: hidden;
      display: flex;
      flex-direction: column;
    }

    body.chat-background {
      background: #1e1e2f;
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .chat-container {
      flex: 1;
      width: 100%;
      max-width: 720px;
      height: 100%;
      display: flex;
      flex-direction: column;
      background: linear-gradient(145deg, #2c2f48, #1e1e2f);
      border-radius: 20px;
      box-shadow: 0 12px 30px rgba(0, 0, 0, 0.6),
                  inset 0 0 0 1px rgba(255, 255, 255, 0.05);
      overflow: hidden;
    }

    .chat-main {
      flex: 1;
      display: flex;
      flex-direction: column;
      min-height: 0;
      height: 100%;
    }

    .chat-header {
      background: #26293f;
      padding: 15px 20px;
      color: white;
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 20px;
      font-weight: bold;
      flex-wrap: wrap;
      gap: 10px;
    }

    .chat-box {
      flex-grow: 1;
      overflow-y: auto;
      padding: 20px;
      display: flex;
      flex-direction: column;
      gap: 12px;
      background: #2c2f48;
      min-height: 0;
      -ms-overflow-style: none;
      scrollbar-width: none;
    }

    .chat-box::-webkit-scrollbar {
      display: none;
    }

    .chat-input {
      position: sticky;
      bottom: 0;
      background: #26293f;
      display: flex;
      gap: 10px;
      padding: 15px;
      z-index: 10;
      box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.3);
      flex-shrink: 0;
    }

    #messageInput {
      flex: 1;
      padding: 12px;
      border-radius: 25px;
      border: none;
      outline: none;
      background: #3a3d5c;
      color: white;
      font-size: 15px;
      resize: none;
      overflow-y: auto;
      max-height: 120px;
      -ms-overflow-style: none;
      scrollbar-width: none;
    }

    #messageInput::-webkit-scrollbar {
      display: none;
    }

    .glowing-btn {
      background: #7e33ff;
      border: none;
      padding: 12px 20px;
      border-radius: 25px;
      color: white;
      font-weight: bold;
      font-size: 15px;
      cursor: pointer;
      transition: all 0.3s ease-in-out;
      box-shadow: 0 0 6px rgba(255, 255, 255, 0.4);
      flex-shrink: 0;
    }

    .glowing-btn:hover {
      background: #9a66ff;
      box-shadow: 0 0 12px rgba(255, 255, 255, 0.6);
      transform: scale(1.05);
    }

    .glowing-btn:active {
      transform: scale(1);
    }

    #copyGroupLinkBtn {
      background: #201c2c;
    }

    #copyGroupLinkBtn:hover {
      background: #7e33ff;
    }

    .message {
      max-width: 70%;
      padding: 12px 18px;
      border-radius: 20px;
      font-size: 15px;
      line-height: 1.4;
      word-break: break-word;
      display: flex;
      flex-direction: column;
      gap: 4px;
    }

    .sent {
      align-self: flex-end;
      background: #7e33ff;
      color: white;
      border-bottom-right-radius: 0;
    }

    .received {
      align-self: flex-start;
      background: #404368;
      color: white;
      border-bottom-left-radius: 0;
    }

    .username {
      font-size: 12px;
      color: #c5a3ff;
    }

    .timestamp {
      font-size: 10px;
      color: #e8e6e6;
      text-align: right;
    }

    @media (max-width: 768px) {
      .chat-container {
        width: 100%;
        height: 100vh;
        border-radius: 0;
        box-shadow: none;
      }

      .chat-header {
        font-size: 16px;
        padding: 10px;
      }

      .glowing-btn {
        font-size: 13px;
        padding: 8px 14px;
      }

      #messageInput {
        font-size: 14px;
      }

      .message {
        font-size: 14px;
        max-width: 90%;
      }

      .chat-input {
        padding: 10px;
      }
    }
  </style>
</head>
<body class="chat-background">
  <div class="chat-container">
    <div class="chat-main">
      <div class="chat-header">
        ðŸ”’ Secret Group
        <div>
          <button id="copyGroupLinkBtn" class="glowing-btn">Copy Group Link</button>
          <button class="glowing-btn" onclick="location.href='/chat'">Leave</button>
        </div>
      </div>
      <div class="chat-box" id="chatBox"></div>
      <div class="chat-input">
        <textarea id="messageInput" placeholder="Type anonymously..." rows="1"></textarea>
        <button id="sendMessage" class="glowing-btn">Send</button>
      </div>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const groupId = "<%= groupId %>";
    const username = "<%= username %>";

    socket.emit("joinGroup", { groupId, username });

    const chatBox = document.getElementById("chatBox");
    const messageInput = document.getElementById("messageInput");

    const sendMessage = () => {
      const message = messageInput.value;
      if (message.trim()) {
        socket.emit("message", message);
        messageInput.value = "";
        messageInput.style.height = 'auto';
      }
    };

    document.getElementById("sendMessage").addEventListener("click", sendMessage);
    messageInput.addEventListener("keydown", (event) => {
      if (event.key === "Enter" && !event.shiftKey) {
        event.preventDefault();
        sendMessage();
      }
    });

    messageInput.addEventListener("input", function () {
      this.style.height = 'auto';
      this.style.height = this.scrollHeight + 'px';
      chatBox.scrollTop = chatBox.scrollHeight;
    });

    messageInput.addEventListener("focus", () => {
      setTimeout(() => {
        chatBox.scrollTop = chatBox.scrollHeight;
      }, 300);
    });

    window.addEventListener("orientationchange", () => {
      setTimeout(() => {
        chatBox.scrollTop = chatBox.scrollHeight;
      }, 300);
    });

    socket.on("message", ({ username: senderUsername, message }) => {
      const msgElement = document.createElement("div");
      msgElement.className = "message";

      if (senderUsername === username) {
        msgElement.classList.add("sent");
      } else {
        msgElement.classList.add("received");
        const nameElement = document.createElement("span");
        nameElement.className = "username";
        nameElement.innerText = senderUsername;
        msgElement.appendChild(nameElement);
      }

      const textElement = document.createElement("span");
      textElement.innerText = message;
      msgElement.appendChild(textElement);

      const timeElement = document.createElement("div");
      timeElement.className = "timestamp";
      const now = new Date();
      let hours = now.getHours();
      const minutes = now.getMinutes().toString().padStart(2, '0');
      const ampm = hours >= 12 ? 'PM' : 'AM';
      hours = hours % 12 || 12;
      timeElement.innerText = `${hours}:${minutes} ${ampm}`;
      msgElement.appendChild(timeElement);

      chatBox.appendChild(msgElement);
      chatBox.scrollTop = chatBox.scrollHeight;
    });

    socket.on("kicked", () => {
      alert("You've been removed by admin ðŸ‘‹");
      location.href = "/chat";
    });

    document.getElementById("copyGroupLinkBtn").addEventListener("click", function () {
      const groupLink = window.location.href;
      navigator.clipboard.writeText(groupLink)
        .then(() => alert("Group link copied to clipboard!"))
        .catch(err => alert("Failed to copy the group link: " + err));
    });

    function kickUser(targetUsername) {
      socket.emit("kickUser", { groupId, targetUsername });
    }
  </script>
</body>
</html>
