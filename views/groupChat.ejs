<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Anonymous Group Chat</title>
  <link rel="stylesheet" href="/styles.css">
<style>
  body.chat-background {
    background: #1e1e2f;
    height: 100vh;
    margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
  }

 .chat-container {
    width: 100%;
    max-width: 720px;
    height: 90vh;
    margin-left: auto;
    margin-right: auto;
    padding-left: 0px;
    padding-right: 35px;
    background: linear-gradient(145deg, #2c2f48, #1e1e2f);
    border-radius: 20px;
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.6),
                inset 0 0 0 1px rgba(255, 255, 255, 0.05);
    display: flex !important;
    flex-direction: column;
    overflow: hidden;
    box-sizing: border-box;
  }


  .chat-main {
    flex: 1;
    display: flex;
    flex-direction: column;
    width: 100%;
  }

  .chat-header {
    background: #26293f;
    padding: 15px 20px;
    color: white;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 20px;
    font-weight: bold;
    flex-wrap: wrap;
    gap: 10px;
  }

  .chat-box {
    flex: 1;
    padding: 20px;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: 12px;
    background: #2c2f48;
  }

  .chat-input {
    display: flex;
    padding: 15px;
    background: #26293f;
    gap: 10px;
  }

  .chat-input input {
    flex: 1;
    padding: 12px;
    border-radius: 25px;
    border: none;
    outline: none;
    background: #3a3d5c;
    color: white;
    font-size: 15px;
  }

  .glowing-btn {
    background: #7e33ff;
    border: none;
    padding: 12px 20px;
    border-radius: 25px;
    color: white;
    font-weight: bold;
    font-size: 15px;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
    box-shadow: 0 0 6px rgba(255, 255, 255, 0.4);
    flex-shrink: 0;
  }

  .glowing-btn:hover {
    background: #9a66ff;
    box-shadow: 0 0 12px rgba(255, 255, 255, 0.6);
    transform: scale(1.05);
  }

  .glowing-btn:active {
    transform: scale(1);
  }

  #copyGroupLinkBtn {
    background: #201c2c;
  }

  #copyGroupLinkBtn:hover {
    background: #7e33ff;
  }

  .message {
    max-width: 70%;
    padding: 12px 18px;
    border-radius: 20px;
    font-size: 15px;
    line-height: 1.4;
    word-break: break-word;
  }

  .sent {
    align-self: flex-end;
    background: #7e33ff;
    color: white;
    border-bottom-right-radius: 0;
  }

  .received {
    align-self: flex-start;
    background: #404368;
    color: white;
    border-bottom-left-radius: 0;
  }

  .username {
    font-size: 12px;
    color: #c5a3ff;
    margin-bottom: 5px;
    display: block;
  }

  .timestamp {
    font-size: 10px;
    color: #e8e6e6;
    margin-top: 5px;
    text-align: right;
  }

  @media (max-width: 768px) {
    .chat-container {
      width: 100%;
      height: 100vh;
      border-radius: 0;
      box-shadow: none;
    }

    .chat-header {
      font-size: 16px;
      padding: 10px;
    }

    .glowing-btn {
      font-size: 13px;
      padding: 8px 14px;
    }

    .chat-input input {
      font-size: 14px;
    }

    .message {
      font-size: 14px;
      max-width: 90%;
    }

    .chat-input {
      padding: 10px;
    }
    .message {
      max-width: 70%;
      padding: 12px 18px;
      border-radius: 20px;
      font-size: 15px;
      line-height: 1.4;
      word-break: break-word;
      display: flex;
      flex-direction: column;
      gap: 4px;
    }

    .message-text {
      font-size: 15px;
      line-height: 1.5;
    }

    .timestamp {
      font-size: 11px;
      color: #cfcfcf;
      text-align: right;
      margin-top: 4px;
    }

    .sent {
      align-self: flex-end;
      background: #7e33ff;
      color: white;
      border-bottom-right-radius: 0;
      text-align: right;
    }

    .received {
      align-self: flex-start;
      background: #404368;
      color: white;
      border-bottom-left-radius: 0;
      text-align: left;
    }

    .username {
      font-size: 13px;
      font-weight: bold;
      color: #c5a3ff;
    }

  }
</style>

</head>
<body class="chat-background">
  <div class="chat-container">
    <div class="chat-main">
      <div class="chat-header">
        ðŸ”’ Secret Group
        <div>
          <button id="copyGroupLinkBtn" class="glowing-btn">Copy Group Link</button>
          <button class="glowing-btn" onclick="location.href='/chat'">Leave</button>
        </div>
      </div>
      <div class="chat-box" id="chatBox"></div>
      <div class="chat-input">
        <input type="text" id="messageInput" placeholder="Type anonymously...">
        <button id="sendMessage" class="glowing-btn">Send</button>
      </div>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const groupId = "<%= groupId %>";
    const username = "<%= username %>";

    socket.emit("joinGroup", { groupId, username });

    const sendMessage = () => {
      const message = document.getElementById("messageInput").value;
      if (message.trim()) {
        socket.emit("message", message);
        document.getElementById("messageInput").value = "";
      }
    };

    document.getElementById("sendMessage").addEventListener("click", sendMessage);
    document.getElementById("messageInput").addEventListener("keydown", (event) => {
      if (event.key === "Enter") {
        event.preventDefault();
        sendMessage();
      }
    });

    socket.on("message", ({ username: senderUsername, message }) => {
      const msgElement = document.createElement("div");
      msgElement.className = "message";

      if (senderUsername === username) {
        msgElement.classList.add("sent");
      } else {
        msgElement.classList.add("received");
        const nameElement = document.createElement("span");
        nameElement.className = "username";
        nameElement.innerText = senderUsername;
        msgElement.appendChild(nameElement);
      }

      const textElement = document.createElement("span");
      textElement.innerText = message;
      msgElement.appendChild(textElement);

      const timeElement = document.createElement("div");
      timeElement.className = "timestamp";

      const now = new Date();
      let hours = now.getHours();
      const minutes = now.getMinutes().toString().padStart(2, '0');
      const ampm = hours >= 12 ? 'PM' : 'AM';
      hours = hours % 12 || 12;

      timeElement.innerText = `${hours}:${minutes} ${ampm}`;

      msgElement.appendChild(timeElement);

      document.getElementById("chatBox").appendChild(msgElement);
      document.getElementById("chatBox").scrollTop = document.getElementById("chatBox").scrollHeight;
    });

    socket.on("kicked", () => {
      alert("You've been removed by admin ðŸ‘‹");
      location.href = "/chat";
    });

    socket.on("updateParticipants", (participants) => {
      const participantsList = document.getElementById("participantsList");
      const participantCount = document.getElementById("participantCount");
      participantsList.innerHTML = "";
      participantCount.innerText = participants.length;

      participants.forEach(participant => {
        const participantDiv = document.createElement("div");
        participantDiv.className = "participant";
        participantDiv.innerHTML = `
          <span>${participant}</span>
          <button onclick="kickUser('${participant}')">Remove</button>
        `;
        participantsList.appendChild(participantDiv);
      });
    });

    document.getElementById("copyGroupLinkBtn").addEventListener("click", function() {
        const groupLink = window.location.href;
        navigator.clipboard.writeText(groupLink)
            .then(() => {
                alert("Group link copied to clipboard!");
            })
            .catch(err => {
                alert("Failed to copy the group link: " + err);
            });
    });

    function kickUser(targetUsername) {
      socket.emit("kickUser", { groupId, targetUsername });
    }
  </script>
</body>
</html>
